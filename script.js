let button = document.getElementById('js-calc-cipher');
let userNameArea = document.getElementById('user-name');
let cipherInputArea = document.getElementById('cipher-input');
let cipherOutputArea = document.getElementById('cipher-output');

let charCountDiv = document.getElementById('char-count');
const maxInputLength = 112;


// Handle Cipher button
button.addEventListener('click', function (event) {
    let userName = userNameArea.value
    let cipherInput = replaceNumbersInText(cipherInputArea.value);
    let cipherOutput = [];

    let lengthAvailableForMorse = maxInputLength - cipherInput.length;
    lengthAvailableForMorse += countWhitespaceInText(cipherInput);

    let morseIndex = 0;
    let morseInHelix = morse[lengthAvailableForMorse];
    for (char of cipherInput) {
        let cipheredChar;

        if (char === ' ') {
            let morseChar = morseInHelix[morseIndex++];
            cipheredChar = cipher.morse[morseChar];
        } else {
            cipheredChar = cipher[char];
        }
        cipherOutput.push(cipheredChar);
        
    }

    while (cipherOutput.length < maxInputLength) {
        let morseChar = morseInHelix[morseIndex++];
        cipheredChar = cipher.morse[morseChar];
        cipherOutput.push(cipheredChar);
    }
    let encoded = cipherOutput.join(' ');
    cipherOutputArea.textContent = encoded;

    draw(cipherOutput);
    save(userName, cipherInput, encoded);
});

function countWhitespaceInText(text) {
    let count = 0;
    for (char of text) {
        if (char === ' ') {
            count += 1;
        }
    }
    return count;
}


function replaceNumbersInText(text) {
    let result = [];
    for (char of text) {
       if(isNumber(char))
            result.push(numbers[char]);
        else
            result.push(char);
    }
    return result.join('');
}


const charcodeZero = "0".charCodeAt(0);
const charcodeNine = "9".charCodeAt(0);
function isNumber(char){
    var c = char.charCodeAt(0);
    return c >= charcodeZero && c <= charcodeNine;
}

// Update count on text changes
cipherInputArea.addEventListener('input', function (event) {
    let remaining = maxInputLength - replaceNumbersInText(cipherInputArea.value).length;
    let text = new String(remaining) + " characters over";
    charCountDiv.textContent = text;
})

const numbers = {
    "1": "%a",
    "2": "%b",
    "3": "%c",
    "4": "%d",
    "5": "%e",
    "6": "%f",
    "7": "%g",
    "8": "%h",
    "9": "%i",
    "0": "%j",
};

const cipher = {
    "A": "CAG",
    "B": "CGC",
    "C": "CCG",
    "D": "CGT",
    "E": "GCC",
    "F": "GAC",
    "G": "GGA",
    "H": "CTT",
    "I": "CGG",
    "J": "TAC",
    "K": "CTC",
    "L": "GCA",
    "M": "TCG",
    "N": "CTG",
    "O": "GGT",
    "P": "GTG",
    "Q": "GAG",
    "R": "GAT",
    "S": "TCT",
    "T": "GCT",
    "U": "TCC",
    "V": "GCG",
    "W": "GGC",
    "X": "TAA",
    "Y": "TTA",
    "Z": "GGG",
    "a": "GAA",
    "b": "AAC",
    "c": "AAT",
    "d": "AAA",
    "e": "TAG",
    "f": "ACG",
    "g": "AAG",
    "h": "CAA",
    "i": "AGC",
    "j": "ACA",
    "k": "ATT",
    "l": "AGA",
    "m": "ACT",
    "n": "CCC",
    "o": "ACC",
    "p": "AGG",
    "q": "CAC",
    "r": "CTA",
    "s": "ATC",
    "t": "AGT",
    "u": "CAT",
    "v": "ATA",
    "w": "CGA",
    "x": "ATG",
    "y": "CCXT",
    "z": "CCA",
    ",": "GTA",
    "?": "GTC",
    "!": "TTT",
    ".": "GTT",
    "-": "TTC",
    ")": "TGA",
    "(": "TCA",
    "#": "TGC",
    "@": "TGG",
    "%": "TGT",
    "morse": {
        ".": "TAT",
        "-": "TTG",
        "/": "TGC",
        " ": "TGG"
    }
}

//-.- -. .. .--./-.. .- -/. .-./-- .- .- .-./...- .- -./- ..- ... ... . -./. .-.. ...


const morse = [
    "",  //0
    "#",  //1
    "-.",  //2
    ".-.",  //3
    "-.-.",  //4
    ".- ..",  //5
    ".... .",  //6
    ".--. ..",  //7
    ". ... .-",  //8
    ".. -.-. -",  //9
    ". .-.. ...",  //10
    "--. . . -.-",  //11
    "-. . .-. -..",  //12
    "-.- ..- .-. -",  //13
    ".--. . - . .-.",  //14
    ".... . - - -.--",  //15
    "./-- ..- ... -.-",  //16
    "-.-. .- ... ----.",  //17
    "-- .- .-. .. .- -.",  //18
    ".-.. .. . ...- . -.",  //19
    ".-- --- -- -... .- -",  //20
    ".--. --- -- .--. . ..",  //21
    "--. --- --- --. .-.. .",  //22
    "-... .- .-. -/...- .--.",  //23
    ".--- . .-. --- . -./-...",  //24
    ".--. --- -. -.-. .... ---",  //25
    "-- . -.. -.-. .- ... . ...",  //26
    "-. . .-. -.. .-.. .- -. -..",  //27
    "... - . .--. .... .- -. .. .",  //28
    "..-. -.-- ... .. -.-. ..- ...",  //29
    "...- . ... ..- ...- .. ..- ...",  //30
    "... .... --- .-- -. --- - . ...",  //31
    "--. --- ..- -.. . -./.--- .- ...",  //32
    "-.-. ..- .-. .. --- ... .. - -.--",  //33
    ".-- . - . -. ... -.-. .... .- .--.",  //34
    ". -. - --- -- --- .-.. --- --. .. .",  //35
    ".--- --- .... -./-- -.-. .- ..-. . .",  //36
    ". ... - . .-. .. . .-. .-- .. ..-. ..",  //37
    ".-. ..- .. -- - . ... - .- - .. --- -.",  //38
    "-. . . ..-./..-. .-. . -.. . .-. .. -.-",  //39
    ".--. . .-. ... . ...- . .-. .- -. -.-. .",  //40
    "-... .-.. --- -.-. -.- -.-. .... .- .. -.",  //41
    ".--- --- .... -. -. -.--/- .-. .- ... ....",  //42
    "./.. .../-- -.-./-.- .-- .- -.. .-. .- .- -",  //43
    "-.. ./--. . -.- -. .. .--. - ./--. . -. . -.",  //44
    ".... . -. -.-/.-. .. .--- -.-. -.- .- . .-. -",  //45
    ".. --. -. --- -... . .-.. .--. .-. .. .--- ...",  //46
    "-. .- - .... .-/-.- . .-. -.- .... --- ..-. ...",  //47
    "..-. .- .. .-. -.--/.--. --- ... .. - .-. --- -.",  //48
    ".- ../... --- -. --. ..-. . ... - .. ...- .- .-..",  //49
    "-- .- .- -. -.. --- ...- . .-. --.. .. -.-. .... -",  //50
    "-... --- ... - --- -./-.. -.-- -. .- -- .. -.-. ...",  //51
    ".-- -.-/.-. --- -... --- - ...- --- . - -... .- .-..",  //52
    ".. .../-.. .- -/--. . . -./..-. .- -.- ./-. . .-- ...",  //53
    ".-.. .. -. -.- ... -.. .-. .- .- .. . -. -../-.. -. .-",  //54
    "-. . .-. -.. .-.. .- -. -../-.. .. ... -.-. --- .-. -..",  //55
    "--. . -... .-. --- . -.. . .-. .../.-- .-. .. --. .... -",  //56
    ".-. . -.-. .... - ... -.. .-. .- .- .. . -. -../-.. -. .-",  //57
    "-... . .... -. -.- . -./.- -. -../.... ..- .-. .-.. . -.--",  //58
    ".--. .. -.- .- -. -/--. . - .. -. - ./-- --- .--. .--. . -.",  //59
    "... .--. --- -. ... --- .-./...- .- -./-.. ./-- .- .- -. -..",  //60
    "...- .- -.-. -.-. .. -. .- - .. . -.-. .- -- .--. .- --. -. .",  //61
    "- .. - .-.. ./--- ..-./-.-- --- ..- .-./... . -..- - .- .--. .",  //62
    "-. . .-. -.. .../--. . ...- . -./-. . .-. -.. - .- .-.. -.- ...",  //63
    "... - . .--. .... .- -. .. ./--.. . -/..- .--/--. ... --/.- ..-.",  //64
    ".-- . - . -. ... -.-. .... .- .--. ... .--. --- -.. -.-. .- ... -",  //65
    "...- .. . .-. -.- .- -. - ./..- .. - .-- . .-. .--. ... . .-.. ...",  //66
    "-.-. --- -- .--. ..- - . .-. - . -.-. .... -. --- .-.. --- --. .. .",  //67
    ".-.. .. ...- ./.--. --- -.. -.-. .- ... -/... .--. . -.-. .. .- .-..",  //68
    "...- .-. --- ..- .-- . -./--.. .. .--- -./... ..- -.. --- -.- ..- ...",  //69
    "-.. ./... .-.. .. -- ... - ./-. . .-. -../- . .-./.-- . .-. . .-.. -..",  //70
    "-.. .-. .. . .-.. .. -.-. .... .- -- . -. .--. .-. --- -... .-.. . . --",  //71
    ". . -./.-- --- -- -... .- -/-.- .- -.- -/-.- ..- -... ..- ... .--- . ...",  //72
    "-. . .-. -.. .-.. .- -. -../-.. .. ... -.-. --- .-. -../-- . . - ..- .--.",  //73
    ".-- ./--.. . - - . -./.... . -/.. -./-.. ./... .... --- .-- -. --- - . ...",  //74
    "-.. ..- -... -... . .-.. -... .-.. .. -. -../. -..- .--. . .-. .. -- . -. -",  //75
    ". --- ... .. -. ./-.. .- .../.. . - .../...- --- --- .-./.-- .- - .--- . ...",  //76
    "-.. --- . -... --- . -.-/...- --- --- .-./-.- .-.. . .. -. ./-. . .-. -.. ...",  //77
    "..- .--/--. .- ... - .... . . .-./.-.. .. . ...- . -./... -.-. .... . .. .-. .",  //78
    ".... . . ..-. -/.. . -.. . .-. . . -./--. . -. --- . --./-.. .-. .. -. -.- . -.",  //79
    "... --- ..- -. -../--- ..-./... -.-. .. . -. -.-. ./..-. . ... - .. ...- .- .-..",  //80
    ".--. .- .-. .- ... .. - . .-. . -. -.. ./... .-.. ..- .. .--. .-- . ... .--. . -.",  //81
    ".-- ./.-.. . --.. . -./.... . -/.-- . .-../.. -./-.. ./-- .- .. .-.. -... --- -..-",  //82
    "-.- -. .. .--./-.. .- -/. .-./-- .- .- .-./...- .- -./- ..- ... ... . -./. .-.. ...",  //83
    ".... . . .-../...- . . .-../-.-. --- -. ..-. .. .-. -- .- - .. --- -./-... .. .- ...",  //84
    "-.. .- -/-.- .-.. .. -. -.- -/. . -./-... . . - .--- ./.- .-.. .../-.-. .... .. -. .-",  //85
    ".-- .- .- .-./... - .- .- -./-.. ./... .... --- .-- -. --- - . .../.-.. .. . ...- . -.",  //86
    ".-. . -.-. ..- .-. ... .. . -.- ..- .-. -/-.. --- . -/.... . -/--- .--. -. .. . ..- .--",  //87
    ".... . -/--. .- .- -/... --- -- .../--- ...- . .-./-.- .- -.-/--- ..-./-.. .. . .-. . -.",  //88
    "--. . . -./... .--. --- -. ... --- .-./-- .- .- .-./-- .- .. .-../-. .- .- .-./--- -. ...",  //89
    "-.. .. -/. . .-. ... -/.. . -- .- -. -../-- --- . -/. . -./- .-. . .. -./.... .- .-.. . -.",  //90
    ".-- ./--. .- .- -./... -. . .-../-.. --- --- .-./.... . -/-.- --- .-. -/-. .. . ..- .-- ...",  //91
    "--.. . .-.. -.. . -./...- .- -./--- -. .-- .- .- .-. .... . -.. . -./-... . - .. -.-. .... -",  //92
    ".. -.-/--.. .- .-../-.- ..- .-. -/-- .- .- .-./.-- .- -/.-.. ..- .. -.. . .-./--.. . - - . -.",  //93
    ".--. --- .--. ..- .-.. .- .. .-. ... - ./.--. --- -.. -.-. .- ... -/.. -./-... . .-.. --. .. .",  //94
    "-. --- --- .. -/...- --- --- .-./-.-. --- .-. .-. ..- .--. - .. ./--. . --.. .-- .. -.-. .... -",  //95
    ".-.. .. . ...- . -./. -./-- . - .- ..-. --- .-. . -./-.-. --- -- -... .. -. . .-. . -./-. .. . -",  //96
    "....- ..---/.. .../- .... ./.- -. ... .-- . .-./- ---/-.-- --- ..- .-./--.- ..- . ... - .. --- -.",  //97
    ".-. ..- -... .. -.- .../-.- ..- -... ..- .../--- .--. .-.. --- ... ... . -./-- . -/.... . - - -.--",  //98
    ".-.. .. . ...- . -. .. ... -- .. .../.--. ..- -. -/-. . .-. -.. .-.. .- -. -../.--. ..- -. -/-... .",  //99
    "-.. .. -/.. .../. . -./-... . .-. .. -.-. .... -/..- .. -/-.. ./-- --- -. - .- --. . -.- .- -- . .-.",  //100
    "--- .--./-.. ./-. .. . ..- .-- ./--.. --- .-.. -.. . .-./-... .. .---/. .-.. .../. -./.... . - - -.--",  //101
    ". . -./.--. --- -.. -.-. .- ... -/--- .--./.-- . - . -. ... -.-. .... .- .--./--. . .-. .. -.-. .... -",  //102
    ". .-.. --- -./-- ..- ... -.-/. -./.- -. -.. . .-. ./--. --- .-. .. .-.. .-.. .- .../-. .. . ..- .-- ...",  //103
    ".--- . .-. --- . -./--. ./-- --- . -/.-. . -.-. .... -/.. -./-.. ./-- .. -.-. .-. ---/.--. .-. .- - . -.",  //104
    ".--- . .-. --- . -./.... . . ..-. -/.... . -/.-- . . .-./--- ...- . .-./-.. ./-- .- .. .-.. -... --- -..-",  //105
    ".... .. . .-./.-- .- .../. . -./-- . -.. .. ... -.-. .... ./-. --- --- -.. --.. .- .- -.-/...- --- --- .-.",  //106
    "..-. .-.. ..- --- .-. . ... -.-. . .-. . -. -.. ./-.. .. . .-. . -./.- .- -. --. . - .-. --- ..-. ..-. . -.",  //107
    "-- --- --- ../.- -.-. .... - . .-. . . -./--. . .--. .-.. .- -.- -/-.. --- --- .-./. .-.. .../.- . .-. - ...",  //108
    ".-- . . .-./. . -./... --- .-.. .-.. .. -.-. .. - .- - .. ./...- --- --- .-./--. --- ..- -.. . -./.--- .- ...",  //109
    "-.. . -./--- -. --- ..-. ..-. .. -.-. .. . .-.. . -./..-. .- -. -.-. .-.. ..- -.../-. . .-. -.. .-.. .- -. -..",  //110
    "-... . --.. --- .../. -./-... .-. .- -. ... --- -./--.. .. .--- -./--. . . -./.- ... - .-. --- -. .- ..- - . -.",  //111
    ". .-./.-- .- .-. . -./-. --- --./. -. -.- . .-.. ./.-. . -.-. .... - --.. . - - .. -. --. . -./-. --- -.. .. --."  //112
]

function TEST_count_morse() {
    let isOk = true;
    for (var i = 0; i < morse.length; i++) {
        if (morse[i].length != i) {
            isOk = false;
            console.log("count morse failed for" + new String(i) + ". Result was " + new String(morse[i].length) + " but should be " + new String(i));
        }
    }

    if (isOk)
        console.log("TEST_count_morse PASSED!");
    else
        console.log("TEST_count_morse FAILED!");
}

function TEST_replace_numbers() {
    var case1 = "1234567890";
    var case2 = "sfkjlsdgldsfsd";
    var case3 = "kl312123j4kl90sd";

    var result1 = "%a%b%c%d%e%f%g%h%i%j";
    var result2 = "sfkjlsdgldsfsd";
    var result3 = "kl%c%a%b%a%b%cj%dkl%i%jsd"

    let isOk = true;

    if (replaceNumbersInText(case1) != result1) {
        console.log("Replace numbers failed for " + case1 + ". Result was " + replaceNumbersInText(case1) + " but should be" + result1);
        isOk = false;
    }


    if (replaceNumbersInText(case2) != result2) {
        console.log("Replace numbers failed for " + case2 + ". Result was " + replaceNumbersInText(case2) + " but should be" + result2);
        isOk = false;
    }


    if (replaceNumbersInText(case3) != result3) {
        console.log("Replace numbers failed for " + case3 + ". Result was " + replaceNumbersInText(case3) + " but should be" + result3);
        isOk = false;
    }

    if (isOk)
        console.log("TEST_replace_numbers PASSED!");
    else
        console.log("TEST_replace_numbers FAILED!");
}

// run tests
console.log("RUNNING TESTS!");

TEST_count_morse();
TEST_replace_numbers();

console.log("TESTING DONE!");
